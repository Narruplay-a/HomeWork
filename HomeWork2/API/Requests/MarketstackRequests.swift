//
// ArticlesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class MarketstackRequests {
    open class func getStockList(exchange: String,
                                 outputSize: Int = 30,
                                 offset: Int = 0,
                                 apiResponseQueue: DispatchQueue = StockAPI.apiResponseQueue,
                                 completion: @escaping ((_ data: StockList?, _ error: Error?) -> Void)) {
        getStockListWithRequestBuilder(exchange: exchange, outputSize: outputSize, offset: offset).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    open class func getStockListWithRequestBuilder(exchange: String,
                                                   outputSize: Int = 30,
                                                   offset: Int = 0) -> RequestBuilder<StockList> {
        let path = String(format: "tickers")
        let apiKey = StockAPI.MarketstackAPI.apiKey
        let URLString = StockAPI.MarketstackAPI.basePath + path
        let parameters: [String: Any]? = nil

        var urlComponents = URLComponents(string: URLString)
        urlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "exchange": exchange.encodeToJSON(),
            "access_key": apiKey.encodeToJSON(),
            "limit": outputSize.encodeToJSON(),
            "offset": offset.encodeToJSON()
        ])

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<StockList>.Type = StockAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }
}
